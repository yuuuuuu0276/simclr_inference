# # Dockerfile.frontend (placed in front_end/)
# # --- Build stage ---
# FROM node:20-alpine AS build
# WORKDIR /app
# COPY package.json package-lock.json* pnpm-lock.yaml* yarn.lock* ./
# RUN npm ci || npm install
# COPY . .
# # Set your backend URL at build time (defaults to http://localhost:8000)
# ARG VITE_BACKEND_URL=http://localhost:8000
# ENV VITE_BACKEND_URL=$VITE_BACKEND_URL
# RUN npm run build

# # --- Runtime stage ---
# FROM nginx:alpine
# # Copy build to nginx html
# COPY --from=build /app/dist /usr/share/nginx/html
# # Minimal security/headers config (optional)
# RUN sed -i 's|/usr/share/nginx/html;|/usr/share/nginx/html; add_header X-Content-Type-Options nosniff;|g' /etc/nginx/conf.d/default.conf
# EXPOSE 80
# CMD ["nginx", "-g", "daemon off;"]

# Dockerfile.frontend
FROM node:20-alpine AS build
WORKDIR /app
COPY package.json package-lock.json* pnpm-lock.yaml* yarn.lock* ./
RUN npm ci || npm install
COPY . .
ARG VITE_BACKEND_URL=http://localhost:8000
ENV VITE_BACKEND_URL=$VITE_BACKEND_URL
RUN npm run build

FROM nginx:1.27-alpine AS frontend
COPY --from=build /app/dist /usr/share/nginx/html
# Write a small SPA-friendly server block directly:
# RUN printf '%s\n' \
#   'server {' \
#   '  listen 80;' \
#   '  server_name _;' \
#   '  root /usr/share/nginx/html;' \
#   '  index index.html;' \
#   '  location / { try_files $uri /index.html; }' \
#   '  location ~*\.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ { expires 7d; add_header Cache-Control "public"; try_files $uri =404; }' \
#   '  add_header X-Content-Type-Options nosniff;' \
#   '}' \
#   > /etc/nginx/conf.d/default.conf
RUN printf '%s\n' \
  'server {' \
  '  listen 80;' \
  '  server_name _;' \
  '  root /usr/share/nginx/html;' \
  '  index index.html;' \
  '' \
  '  # Single-page app routing' \
  '  location / {' \
  '    try_files $uri /index.html;' \
  '  }' \
  '' \
  '  # Static assets with cache' \
  '  location ~*\.(js|css|png|jpg|jpeg|gif|svg|ico|woff2?)$ {' \
  '    expires 7d;' \
  '    add_header Cache-Control "public";' \
  '    try_files $uri =404;' \
  '  }' \
  '' \
  '  # Proxy API to the backend service in the Docker network' \
  '  location /api/ {' \
  '    proxy_pass http://backend:8000/;' \
  '    proxy_http_version 1.1;' \
  '    proxy_set_header Host $host;' \
  '    proxy_set_header X-Forwarded-For $remote_addr;' \
  '    client_max_body_size 20m;' \
  '  }' \
  '' \
  '  add_header X-Content-Type-Options nosniff;' \
  '}' \
  > /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
